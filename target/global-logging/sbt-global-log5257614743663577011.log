[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\klaud\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\klaud\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.9 (Oracle Corporation Java 14.0.1)
[debug]       Load.loadUnit: plugins took 167.6103ms
[debug]       Load.loadUnit: defsScala took 0.7976ms
[debug] [Loading] Scanning directory C:\Users\klaud\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\klaud\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 34.545 ms
[debug]           Load.resolveProject(global-plugins) took 111.6624ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\klaud\.sbt\1.0\plugins, plugins: List(<none>))) took 182.4333ms
[debug] [Loading] Done in C:\Users\klaud\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 223.946ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5349ms
[debug]     Load.loadUnit(file:/C:/Users/klaud/.sbt/1.0/plugins/, ...) took 415.4289ms
[debug]   Load.apply: load took 745.1935ms
[debug]   Load.apply: resolveProjects took 12.5089ms
[debug]   Load.apply: finalTransforms took 163.2656ms
[debug]   Load.apply: config.delegates took 16.9709ms
[debug]   Load.apply: Def.make(settings)... took 2815.2902ms
[debug]   Load.apply: structureIndex took 270.2422ms
[debug]   Load.apply: mkStreams took 2.9464ms
[info] loading global plugins from C:\Users\klaud\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10235.0358ms
[debug]           Load.loadUnit: plugins took 57.8884ms
[debug]           Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\Users\klaud\Desktop\elevatorsystem\project
[debug]             Load.loadUnit: mkEval took 13.7298ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\klaud\Desktop\elevatorsystem\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.9924 ms
[info] loading settings for project elevatorsystem-build from idea2.sbt ...
[debug]               Load.resolveProject(elevatorsystem-build) took 21.4605ms
[debug]             Load.loadTransitive: finalizeProject(Project(id elevatorsystem-build, base: C:\Users\klaud\Desktop\elevatorsystem\project, plugins: List(<none>))) took 27.6767ms
[debug] [Loading] Done in C:\Users\klaud\Desktop\elevatorsystem\project, returning: (elevatorsystem-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6997.9007ms
[debug]           Load.loadUnit: cleanEvalClasses took 22.4898ms
[debug]         Load.loadUnit(file:/C:/Users/klaud/Desktop/elevatorsystem/project/, ...) took 7080.3248ms
[debug]       Load.apply: load took 7134.6846ms
[debug]       Load.apply: resolveProjects took 0.1688ms
[debug]       Load.apply: finalTransforms took 150.991ms
[debug]       Load.apply: config.delegates took 0.9319ms
[debug]       Load.apply: Def.make(settings)... took 500.7874ms
[debug]       Load.apply: structureIndex took 83.0557ms
[debug]       Load.apply: mkStreams took 0.0047ms
[info] loading project definition from C:\Users\klaud\Desktop\elevatorsystem\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 12617.3701ms
[debug]     Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\klaud\Desktop\elevatorsystem
[debug]       Load.loadUnit: mkEval took 0.3659ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\klaud\Desktop\elevatorsystem, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4617 ms
[info] loading settings for project elevatorsystem from build.sbt ...
[debug]         Load.resolveProject(elevatorsystem) took 47.1031ms
[debug]       Load.loadTransitive: finalizeProject(Project(id elevatorsystem, base: C:\Users\klaud\Desktop\elevatorsystem, plugins: List(<none>))) took 52.4843ms
[debug] [Loading] Done in C:\Users\klaud\Desktop\elevatorsystem, returning: (elevatorsystem)
[debug]     Load.loadUnit: loadedProjectsRaw took 4760.5203ms
[debug]     Load.loadUnit: cleanEvalClasses took 50.0499ms
[debug]   Load.loadUnit(file:/C:/Users/klaud/Desktop/elevatorsystem/, ...) took 17429.3535ms
[debug] Load.apply: load took 17432.3947ms
[debug] Load.apply: resolveProjects took 0.1338ms
[debug] Load.apply: finalTransforms took 53.7203ms
[debug] Load.apply: config.delegates took 11.9998ms
[debug] Load.apply: Def.make(settings)... took 202.4766ms
[debug] Load.apply: structureIndex took 54.4463ms
[debug] Load.apply: mkStreams took 0.0063ms
[info] set current project to hello-world (in build file:/C:/Users/klaud/Desktop/elevatorsystem/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63335 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63335, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to hello-world (in build file:/C:/Users/klaud/Desktop/elevatorsystem/)
[debug] > Exec(idea-shell, None, None)
